apply plugin: 'com.android.application'
apply plugin: 'realm-android'

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def getCommitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'log', '-1', '--format=%h'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getCommitBranch = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getCommitDescription = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--abbrev=0', '--dirty'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 27
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId "io.multy"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 5
        versionName "0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments "-DMULTY_ANDROID_PATH_TO_JNI_WRAPPER=C:\\workspace\\Multy-android\\app\\src\\main\\cpp\\scratch.cpp"
//                arguments "-DMULTY_ANDROID_PATH_TO_JNI_WRAPPER=/Users/appscrunch/AndroidStudioProjects/Multy-android/app/src/main/cpp/scratch.cpp"
                arguments "-DANDROID_STL=c++_shared"
                arguments "-DMULTY_WITH_TESTS=ON"
            }
        }
        ndk {
//            abiFilters 'x86', 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }

        android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = outputFile.name.replace("app",
                            "${defaultConfig.applicationId}_${defaultConfig.versionName}_${releaseTime()}")
                    outputFileName = fileName
                }
            }
        }

        buildConfigField "String", "BUILD_COMMIT_HASH", "\"${getCommitHash()}\""
        buildConfigField "String", "BUILD_COMMIT_BRANCH", "\"${getCommitBranch()}\""
        buildConfigField "String", "BUILD_COMMIT_DESCRIPTION", "\"${getCommitDescription()}\""

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        externalNativeBuild {
            cmake {
                path "C:\\workspace\\Multy-Core\\CMakeLists.txt"
            }
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta5'
    implementation 'com.android.support:recyclerview-v7:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-java8:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.jakewharton.timber:timber:4.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.google.android.gms:play-services-gcm:11.8.0'
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    implementation 'android.arch.lifecycle:extensions:1.1.0'
    testImplementation 'android.arch.core:core-testing:1.1.0'
    implementation 'android.arch.lifecycle:reactivestreams:1.1.0'
    implementation 'com.samwolfand.oneprefs:one-prefs:1.0'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.google.zxing:javase:3.3.0'
    implementation 'me.dm7.barcodescanner:zbar:1.9.4'
    implementation 'io.branch.sdk.android:library:2.16.0'
    implementation 'com.scottyab:rootbeer-lib:0.0.6'
    implementation('io.socket:socket.io-client:0.9.+') {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'com.github.tozny:java-aes-crypto:1.1.0'
    implementation 'com.github.khirr:Android-Foreground-Detection:1.0.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
